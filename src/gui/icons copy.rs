use yarrow::{
    prelude::ResourceCtx,
    vg::text::{ContentType, CustomGlyphID},
};

/// The icons used by the application.
///
/// Icons are sorted in alphabetical order.
#[repr(u16)]
#[derive(Debug, Clone, Copy, PartialEq, Eq, enum_iterator::Sequence)]
pub enum AppIcon {
    Automation,
    AutoReturn,
    Ban,
    Bell,
    Bird,
    Bitcrush,
    BrowserItemArchive,
    BrowserItemAudio,
    BrowserItemAutomation,
    BrowserItemClip,
    BrowserItemContainer,
    BrowserItemDrumMachine,
    BrowserItemFile,
    BrowserItemFolderOpen,
    BrowserItemFolder,
    BrowserItemMidi,
    BrowserItemMultisample,
    BrowserItemPlugin,
    BrowserItemPreset,
    BrowserItemProject,
    BrowserItemScript,
    BrowserItemStarFilled,
    BrowserItemStar,
    BrowserItemSynth,
    BrowserItemTag,
    BrowserItemVideo,
    BrowserItemVisualizer,
    Browser,
    Bug,
    Cable,
    CassetteTape,
    Cat,
    Check,
    ChevronDown,
    ChevronFirst,
    ChevronLast,
    ChevronLeft,
    ChevronRight,
    ChevronUp,
    ChevronsDownUp,
    ChevronsDown,
    ChevronsLeftRight,
    ChevronsLeft,
    ChevronsRightLeft,
    ChevronsRight,
    ChevronsUpDown,
    ChevronsUp,
    Chiptune,
    CircuitBoard,
    ClipboardCopy,
    ClipboardPaste,
    ClipLauncher,
    Clips,
    Clock,
    Combine,
    CommandPalette,
    ComputerKeyboard,
    Container,
    Cpu,
    CreativeCommons,
    Crosshair,
    Download,
    Drum,
    Duplicate,
    Edit,
    Ellipsis,
    EllipsisVertical,
    Eraser,
    FastForward,
    Feather,
    Filter,
    Flame,
    Formula,
    Freeze,
    GridSnap,
    GripHorizontal,
    GripVertical,
    Guitar,
    Headphones,
    Help,
    Home,
    Infinity,
    Info,
    InvertPhase,
    Linked,
    Locked,
    LogoClapExtension,
    LogoClap,
    LogoGitHub,
    LogoLadspa,
    LogoLv2,
    LogoMeadowlark,
    LogoVst,
    Loop,
    MasterTrack,
    Menu,
    Memory,
    Metronome,
    MicOff,
    MicVocal,
    Mic,
    Minus,
    Mixer,
    MusicalKeyboard,
    MusicNoteEighth,
    MusicNoteHalf,
    MusicNoteQuarter,
    MusicNoteWhole,
    OpenWindow,
    Open,
    Package,
    Paint,
    Palette,
    PanelBottom,
    PanelLeft,
    PanelRight,
    Pause,
    Pencil,
    PianoRoll,
    Piano,
    Play,
    Plugin,
    Plus,
    Pointer,
    PowerOff,
    PowerOn,
    Properties,
    Randomize,
    Record,
    Redo,
    Refresh,
    ReplaceAll,
    Replace,
    Rewind,
    SaveAs,
    Save,
    Scissors,
    Script,
    Search,
    Select,
    Settings,
    Shuffle,
    SkipBack,
    SkipForward,
    Speaker,
    StepBack,
    StepForward,
    Stop,
    Tracks,
    Undo,
    Unlinked,
    Unlocked,
    Upload,
    Vocals,
    VolumeHigh,
    VolumeLow,
    VolumeMedium,
    VolumeMute,
    Warning,
    Waveform,
    X,
    ZoomIn,
    ZoomOut,
}

impl AppIcon {
    fn is_symbolic(&self) -> bool {
        match self {
            Self::LogoClapExtension => false,
            Self::LogoMeadowlark => false,
            _ => true,
        }
    }

    #[rustfmt::skip]
    fn source(&self) -> &'static [u8] {
        match self {
            Self::Automation => include_bytes!("../../assets/icons/automation.svg"),
            Self::AutoReturn => include_bytes!("../../assets/icons/auto-return.svg"),
            Self::Ban => include_bytes!("../../assets/icons/ban.svg"),
            Self::Bell => include_bytes!("../../assets/icons/bell.svg"),
            Self::Bird => include_bytes!("../../assets/icons/bird.svg"),
            Self::Bitcrush => include_bytes!("../../assets/icons/bitcrush.svg"),
            Self::BrowserItemArchive => include_bytes!("../../assets/icons/browser-item-archive.svg"),
            Self::BrowserItemAudio => include_bytes!("../../assets/icons/browser-item-audio.svg"),
            Self::BrowserItemAutomation => include_bytes!("../../assets/icons/browser-item-automation.svg"),
            Self::BrowserItemClip => include_bytes!("../../assets/icons/browser-item-clip.svg"),
            Self::BrowserItemContainer => include_bytes!("../../assets/icons/browser-item-container.svg"),
            Self::BrowserItemDrumMachine => include_bytes!("../../assets/icons/browser-item-drum-machine.svg"),
            Self::BrowserItemFile => include_bytes!("../../assets/icons/browser-item-file.svg"),
            Self::BrowserItemFolderOpen => include_bytes!("../../assets/icons/browser-item-folder-open.svg"),
            Self::BrowserItemFolder => include_bytes!("../../assets/icons/browser-item-folder.svg"),
            Self::BrowserItemMidi => include_bytes!("../../assets/icons/browser-item-midi.svg"),
            Self::BrowserItemMultisample => include_bytes!("../../assets/icons/browser-item-multisample.svg"),
            Self::BrowserItemPlugin => include_bytes!("../../assets/icons/browser-item-plugin.svg"),
            Self::BrowserItemPreset => include_bytes!("../../assets/icons/browser-item-preset.svg"),
            Self::BrowserItemProject => include_bytes!("../../assets/icons/browser-item-project.svg"),
            Self::BrowserItemScript => include_bytes!("../../assets/icons/browser-item-script.svg"),
            Self::BrowserItemStarFilled => include_bytes!("../../assets/icons/browser-item-star-filled.svg"),
            Self::BrowserItemStar => include_bytes!("../../assets/icons/browser-item-star.svg"),
            Self::BrowserItemSynth => include_bytes!("../../assets/icons/browser-item-synth.svg"),
            Self::BrowserItemTag => include_bytes!("../../assets/icons/browser-item-tag.svg"),
            Self::BrowserItemVideo => include_bytes!("../../assets/icons/browser-item-video.svg"),
            Self::BrowserItemVisualizer => include_bytes!("../../assets/icons/browser-item-visualizer.svg"),
            Self::Browser => include_bytes!("../../assets/icons/browser.svg"),
            Self::Bug => include_bytes!("../../assets/icons/bug.svg"),
            Self::Cable => include_bytes!("../../assets/icons/cable.svg"),
            Self::CassetteTape => include_bytes!("../../assets/icons/cassette-tape.svg"),
            Self::Cat => include_bytes!("../../assets/icons/cat.svg"),
            Self::Check => include_bytes!("../../assets/icons/check.svg"),
            Self::ChevronDown => include_bytes!("../../assets/icons/chevron-down.svg"),
            Self::ChevronFirst => include_bytes!("../../assets/icons/chevron-first.svg"),
            Self::ChevronLast => include_bytes!("../../assets/icons/chevron-last.svg"),
            Self::ChevronLeft => include_bytes!("../../assets/icons/chevron-left.svg"),
            Self::ChevronRight => include_bytes!("../../assets/icons/chevron-right.svg"),
            Self::ChevronUp => include_bytes!("../../assets/icons/chevron-up.svg"),
            Self::ChevronsDownUp => include_bytes!("../../assets/icons/chevrons-down.svg"),
            Self::ChevronsDown => include_bytes!("../../assets/icons/chevrons-down-up.svg"),
            Self::ChevronsLeftRight => include_bytes!("../../assets/icons/chevrons-left-right.svg"),
            Self::ChevronsLeft => include_bytes!("../../assets/icons/chevrons-left.svg"),
            Self::ChevronsRightLeft => include_bytes!("../../assets/icons/chevrons-right-left.svg"),
            Self::ChevronsRight => include_bytes!("../../assets/icons/chevrons-right.svg"),
            Self::ChevronsUpDown => include_bytes!("../../assets/icons/chevrons-up-down.svg"),
            Self::ChevronsUp => include_bytes!("../../assets/icons/chevrons-up.svg"),
            Self::Chiptune => include_bytes!("../../assets/icons/chiptune.svg"),
            Self::CircuitBoard => include_bytes!("../../assets/icons/circuit-board.svg"),
            Self::ClipboardCopy => include_bytes!("../../assets/icons/clipboard-copy.svg"),
            Self::ClipboardPaste => include_bytes!("../../assets/icons/clipboard-paste.svg"),
            Self::ClipLauncher => include_bytes!("../../assets/icons/clip-launcher.svg"),
            Self::Clips => include_bytes!("../../assets/icons/clips.svg"),
            Self::Clock => include_bytes!("../../assets/icons/clock.svg"),
            Self::Combine => include_bytes!("../../assets/icons/combine.svg"),
            Self::CommandPalette => include_bytes!("../../assets/icons/command-palette.svg"),
            Self::ComputerKeyboard => include_bytes!("../../assets/icons/computer-keyboard.svg"),
            Self::Container => include_bytes!("../../assets/icons/container.svg"),
            Self::Cpu => include_bytes!("../../assets/icons/cpu.svg"),
            Self::CreativeCommons => include_bytes!("../../assets/icons/creative-commons.svg"),
            Self::Crosshair => include_bytes!("../../assets/icons/crosshair.svg"),
            Self::Download => include_bytes!("../../assets/icons/download.svg"),
            Self::Drum => include_bytes!("../../assets/icons/drum.svg"),
            Self::Duplicate => include_bytes!("../../assets/icons/duplicate.svg"),
            Self::Edit => include_bytes!("../../assets/icons/edit.svg"),
            Self::EllipsisVertical => include_bytes!("../../assets/icons/ellipsis-vertical.svg"),
            Self::Ellipsis => include_bytes!("../../assets/icons/ellipsis.svg"),
            Self::Eraser => include_bytes!("../../assets/icons/eraser.svg"),
            Self::FastForward => include_bytes!("../../assets/icons/fast-forward.svg"),
            Self::Feather => include_bytes!("../../assets/icons/feather.svg"),
            Self::Filter => include_bytes!("../../assets/icons/filter.svg"),
            Self::Flame => include_bytes!("../../assets/icons/flame.svg"),
            Self::Formula => include_bytes!("../../assets/icons/formula.svg"),
            Self::Freeze => include_bytes!("../../assets/icons/freeze.svg"),
            Self::GridSnap => include_bytes!("../../assets/icons/grid-snap.svg"),
            Self::GripHorizontal => include_bytes!("../../assets/icons/grip-horizontal.svg"),
            Self::GripVertical => include_bytes!("../../assets/icons/grip-vertical.svg"),
            Self::Guitar => include_bytes!("../../assets/icons/guitar.svg"),
            Self::Headphones => include_bytes!("../../assets/icons/headphones.svg"),
            Self::Help => include_bytes!("../../assets/icons/help.svg"),
            Self::Home => include_bytes!("../../assets/icons/home.svg"),
            Self::Infinity => include_bytes!("../../assets/icons/infinity.svg"),
            Self::Info => include_bytes!("../../assets/icons/info.svg"),
            Self::InvertPhase => include_bytes!("../../assets/icons/invert-phase.svg"),
            Self::Linked => include_bytes!("../../assets/icons/linked.svg"),
            Self::Locked => include_bytes!("../../assets/icons/locked.svg"),
            Self::LogoClapExtension => include_bytes!("../../assets/icons/logo-clap-extension.svg"),
            Self::LogoClap => include_bytes!("../../assets/icons/logo-clap.svg"),
            Self::LogoGitHub => include_bytes!("../../assets/icons/logo-github.svg"),
            Self::LogoLadspa => include_bytes!("../../assets/icons/logo-ladspa.svg"),
            Self::LogoLv2 => include_bytes!("../../assets/icons/logo-lv2.svg"),
            Self::LogoMeadowlark => include_bytes!("../../assets/icons/logo-meadowlark.svg"),
            Self::LogoVst => include_bytes!("../../assets/icons/logo-vst.svg"),
            Self::Loop => include_bytes!("../../assets/icons/loop.svg"),
            Self::MasterTrack => include_bytes!("../../assets/icons/master-track.svg"),
            Self::Memory => include_bytes!("../../assets/icons/memory.svg"),
            Self::Metronome => include_bytes!("../../assets/icons/metronome.svg"),
            Self::Menu => include_bytes!("../../assets/icons/menu.svg"),
            Self::MicOff => include_bytes!("../../assets/icons/mic-off.svg"),
            Self::MicVocal => include_bytes!("../../assets/icons/mic-vocal.svg"),
            Self::Mic => include_bytes!("../../assets/icons/mic.svg"),
            Self::Minus => include_bytes!("../../assets/icons/minus.svg"),
            Self::Mixer => include_bytes!("../../assets/icons/mixer.svg"),
            Self::MusicalKeyboard => include_bytes!("../../assets/icons/musical-keyboard.svg"),
            Self::MusicNoteEighth => include_bytes!("../../assets/icons/music-note-eighth.svg"),
            Self::MusicNoteHalf => include_bytes!("../../assets/icons/music-note-half.svg"),
            Self::MusicNoteQuarter => include_bytes!("../../assets/icons/music-note-quarter.svg"),
            Self::MusicNoteWhole => include_bytes!("../../assets/icons/music-note-whole.svg"),
            Self::OpenWindow => include_bytes!("../../assets/icons/open-window.svg"),
            Self::Open => include_bytes!("../../assets/icons/open.svg"),
            Self::Package => include_bytes!("../../assets/icons/package.svg"),
            Self::Paint => include_bytes!("../../assets/icons/paint.svg"),
            Self::Palette => include_bytes!("../../assets/icons/palette.svg"),
            Self::PanelBottom => include_bytes!("../../assets/icons/panel-bottom.svg"),
            Self::PanelLeft => include_bytes!("../../assets/icons/panel-left.svg"),
            Self::PanelRight => include_bytes!("../../assets/icons/panel-right.svg"),
            Self::Pause => include_bytes!("../../assets/icons/pause.svg"),
            Self::Pencil => include_bytes!("../../assets/icons/pencil.svg"),
            Self::PianoRoll => include_bytes!("../../assets/icons/piano-roll.svg"),
            Self::Piano => include_bytes!("../../assets/icons/piano.svg"),
            Self::Play => include_bytes!("../../assets/icons/play.svg"),
            Self::Plugin => include_bytes!("../../assets/icons/plugin.svg"),
            Self::Plus => include_bytes!("../../assets/icons/plus.svg"),
            Self::Pointer => include_bytes!("../../assets/icons/pointer.svg"),
            Self::PowerOff => include_bytes!("../../assets/icons/power-off.svg"),
            Self::PowerOn => include_bytes!("../../assets/icons/power-on.svg"),
            Self::Properties => include_bytes!("../../assets/icons/properties.svg"),
            Self::Randomize => include_bytes!("../../assets/icons/randomize.svg"),
            Self::Record => include_bytes!("../../assets/icons/record.svg"),
            Self::Redo => include_bytes!("../../assets/icons/redo.svg"),
            Self::Refresh => include_bytes!("../../assets/icons/refresh.svg"),
            Self::ReplaceAll => include_bytes!("../../assets/icons/replace-all.svg"),
            Self::Replace => include_bytes!("../../assets/icons/replace.svg"),
            Self::Rewind => include_bytes!("../../assets/icons/rewind.svg"),
            Self::SaveAs => include_bytes!("../../assets/icons/save-as.svg"),
            Self::Save => include_bytes!("../../assets/icons/save.svg"),
            Self::Scissors => include_bytes!("../../assets/icons/scissors.svg"),
            Self::Script => include_bytes!("../../assets/icons/script.svg"),
            Self::Search => include_bytes!("../../assets/icons/search.svg"),
            Self::Select => include_bytes!("../../assets/icons/select.svg"),
            Self::Settings => include_bytes!("../../assets/icons/settings.svg"),
            Self::Shuffle => include_bytes!("../../assets/icons/shuffle.svg"),
            Self::SkipBack => include_bytes!("../../assets/icons/skip-back.svg"),
            Self::SkipForward => include_bytes!("../../assets/icons/skip-forward.svg"),
            Self::Speaker => include_bytes!("../../assets/icons/speaker.svg"),
            Self::StepBack => include_bytes!("../../assets/icons/step-back.svg"),
            Self::StepForward => include_bytes!("../../assets/icons/step-forward.svg"),
            Self::Stop => include_bytes!("../../assets/icons/stop.svg"),
            Self::Tracks => include_bytes!("../../assets/icons/tracks.svg"),
            Self::Undo => include_bytes!("../../assets/icons/undo.svg"),
            Self::Unlinked => include_bytes!("../../assets/icons/unlinked.svg"),
            Self::Unlocked => include_bytes!("../../assets/icons/unlocked.svg"),
            Self::Upload => include_bytes!("../../assets/icons/upload.svg"),
            Self::Vocals => include_bytes!("../../assets/icons/vocals.svg"),
            Self::VolumeHigh => include_bytes!("../../assets/icons/volume-high.svg"),
            Self::VolumeLow => include_bytes!("../../assets/icons/volume-low.svg"),
            Self::VolumeMedium => include_bytes!("../../assets/icons/volume-medium.svg"),
            Self::VolumeMute => include_bytes!("../../assets/icons/volume-mute.svg"),
            Self::Warning => include_bytes!("../../assets/icons/warning.svg"),
            Self::Waveform => include_bytes!("../../assets/icons/waveform.svg"),
            Self::X => include_bytes!("../../assets/icons/x.svg"),
            Self::ZoomIn => include_bytes!("../../assets/icons/zoom-in.svg"),
            Self::ZoomOut => include_bytes!("../../assets/icons/zoom-out.svg"),
        }
    }
}

impl Into<CustomGlyphID> for AppIcon {
    fn into(self) -> CustomGlyphID {
        self as CustomGlyphID
    }
}

pub fn load_icons(res: &mut ResourceCtx) {
    let opt = yarrow::vg::text::svg::resvg::usvg::Options::default();

    // TODO: Load icons from theme folder.
    for icon in enum_iterator::all::<AppIcon>() {
        let data = icon.source();
        let content_type = if icon.is_symbolic() {
            ContentType::Mask
        } else {
            ContentType::Color
        };

        res.svg_icon_system
            .add_from_bytes(icon, data, &opt, content_type)
            .unwrap();
    }
}
